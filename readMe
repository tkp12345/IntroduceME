 👩‍💻프로젝트를 통해 학습한점 

 ---

  ✔ hover 효과시 전체 요소에 속성을 주는방식

    .master .content .box .imgBx .imgOveray > *{
    
    }

✔ body{
    
   *min-height: 1000px;
    full creen  스크롤 
}
✔ .banner{
   *반응형 웹디자인 기술은 퍼센트 값에의존
    height: 100vh;
    =>스크린의 너비값에 꽉 차는 헤드라인
    -vh : 높이값의 100분의 1의 :  높이값이 900px일때 1vh는 9px
    -rem: "r"은 바로 "root(최상위)"를 뜻합니다. 최상위 태그(요소)에 지정한 것을 기준으로 변함
    -em : 기준이 되는 값을 지정된 배수로 변환해 표현한 크기
            (기준: 현재 스타일 지정 요소의 font-size 값)
}

✔ .btn{
    *text-transform: uppercase;

    한글에서는 의미가 없는 속성이다 
    none : 입력된 그대로 출력 .
    capitalize : 단어의 첫번째 글자를 대문자로 바꾼다.
    uppercase : 모든 글자를 대문자로 바꾼다.
    lowercase : 모든 글자를 소문자로 바꿉니다.
    initial : 기본값으로 설정합니다.
    inherit : 부모 요소의 속성값을 상속받습니다.

    Chrome : 1.0+
    Firefox : 1.0+
    Internet Explorer : 4.0+
    Opera : 7.0+
    Safari : 1.0+


}

✔ .btn:hover{
   * letter-spacing:6px;

    hover 를 가지고 letter-spacing 을 늘려주면 동적인 버튼 생성가능
    글자 길이에 따라 버튼이 늘어난다
}

✔ .header {
    justify-content: space-between;
    사이드 에 로고와 nav 바를 거리두기위해 사용 
}

✔ header .logo span{
    <a href="#" class="logo">Main<span>.</span></a>
    중간 글씩의 색상이나 테마를 바꿀때는 <span> 태그 처리를 한다

    color:rgb(4, 240, 130);
}


✔ header .navigation{
    <ul class="nav">
    ul 을 가로처리는 flex로 한다
    position: relative;
    relative를 준이유는 어떤 요소가 들어갈지 모르니 범용성 차원
    + 주면태그에 영향을 끼치지 않으면서 위치 조정 
}


* Transition :  원하는 요소를 지연시켜 애니메이션이 가능하게 만들어준다 (IE 10+)

✔ 사진의 규격을 정할때 : 전체 flex 를 주고 % 값을 이용해 배치를 해준다
.row .col50{
  position: relative;
  width: 48%;
}

 ✔ classList를 이용하면 클래스를 조작하는 다양한 메서드들을 쓸 수 있다.
    classList.add : 클래스를 필요에 따라 삽입한다.
    classList.remove : 클래스를 필요에 따라 제거한다.
    classList.contains : 값이 존재하는지 체크한다. (true/false)
    classList.toggle(): 클래스값이 있는지 체크하고 없으면 더하고 있으면 제거한다
 
  ✔ 반응형 제작시 padding 조절하여 화면 비율을 유지한다


   ✔ blur 를 사용한 이미지 hover

     backdrop-filter: blur(px) 를이용하여 
     선택자를 추가하여 이미지 hover시 블러를 줄수있다 


js.js

    *스크롤 감지 헤더 표현
    고정헤더의 불편함을 탈피하기위해 스크롤 감지에따른 헤더를 보여주고 싶었습니다

    스크롤 내릴때 => 사용자 컨텐츠 탐색 => 헤더감추기
    스크롤 위로올릴때 => 사용자 컨테츠 탐색종료 => 헤더 나타내기

---------------------------------------------------------------

    정해진 시간동안 스크롤 이벤트를 확인하여 조건에 맞게 헤더를 변경한다

    1.헤더 요소에 position: fixed 를 설정
    2.스크롤 방향이 아래로 향한다면 헤더 요소에 클래스를 추가하고 이 클래스에 의해 헤더가 위로 사라진다.
    /* 윈도우의 높이 */
    window.innerHeight;  
    /* 스크롤 값 */
    window.scrollY;  
    /* */
    scrollTop

    3. 스크롤 조건
    스크롤 내릴때 : 현재스크롤 < 헤더높이 && 전의스크롤 < 현재스크롤   

    스크롤 올릴때 : 현재스크롤 + 

    *주의 =>  scroll 이벤트는 짧은 시간 자주 발생하는 이벤트이므로 성능 부분신경
    *주의 => window.scrollY 은 IE  인식안함 인식하는 window.pageYOffset 

    학습개념 🧑
    scrollHeight : 스크롤바 높이를 뺀 내용 전체의 높이

    clientHeight : 스크롤바 보는 창높이

    offsetHeight : 스크롤바 높이를 포함한 가시적인 높이(패딩 + 보더)

    IE8 (undefined)목록

    - window.outerHeight는 현재 창의 높이(주소표시줄과 같은 높이들도 포함)


    document.documentElement => <html> 요소를 반환함
    document.documentElement.clientHeight => 뷰포트 높이
    window.innerHeight => 네비게이션 창을 제외한 높이  
    window.outerHeight =>브라우저 자체의 높이

    document.documentElement.clientWidth =>뷰포트 너비
    document.documentElement.clientHeight =>뷰포트 높이


    viewport: 스크롤바를 제외한크기 
    document: 스크롤바까지 포함한 길이

    IE, firefox
    document.documentElement.scrollLeft : x 축 방향으로 스크롤한 거리
    document.documentElement.scrollTop : y 축 방향으로 스크롤한 거리
    크롬, 사파리, 오페라에도 같은 프로퍼티가 있지만 값이 항상 0

    Chrome, safari, opera, edge, Quirks Mode
    document.body.scrollLeft : x 축 방향으로 스크롤한 거리
    document.body.scrollTop : y 축 방향으로 스크롤한 거리

    Firefox, chrome, safari, opera, edge, IE>=9
    window.pageXOffset : x 축 방향으로 스크롤한 거리
    window.pageYOffset : y 축 방향으로 스크롤한 거리

※크로스브라우징 이슈 해결
    function ScrollTop()
    {
        /*pageYOffset 브라우저 문서위치 Y값 반환 */
        /*pageYoffset 값이 있다면 */
        if(window.pageYoffset !== undefined)
        {
            /*pageYoffset 값리턴 */
            retrun window.pageYOffset; 
        
        /*pageYoffset 없다면 */
        }else{
            return document.documentElement.scrollLeft || document.body.scrollTop;
        }
   
    }
    }
